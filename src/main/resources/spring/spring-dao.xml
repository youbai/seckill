<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <util:properties id="db" location="classpath:jdbc.properties"/>
    <!-- 定义数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="#{db.driver}"/>
        <property name="url" value="#{db.url}"/>
        <property name="username" value="#{db.username}"/>
        <property name="password" value="#{db.password}"/>
    </bean>
    <!-- 1.数据库相关参数 -->
    <!--<context:property-placeholder location="classpath:jdbc.properties"/>-->
    <!-- 2.数据库连接池 -->
    <!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${driver}"/>
        <property name="jdbcUrl" value="${url}"/>
        <property name="user" value="${username}"/>
        <property name="password" value="${password}"/>
        &lt;!&ndash; c3p0连接池私有属性 &ndash;&gt;
        <property name="maxPoolSize" value="30"/>
        <property name="minPoolSize" value="10"/>
        &lt;!&ndash; 关闭连接后不自动commit &ndash;&gt;
        <property name="autoCommitOnClose" value="false"/>
        &lt;!&ndash; 获取连接超时时间 &ndash;&gt;
        <property name="checkoutTimeout" value="1000"/>
        &lt;!&ndash; 获取连接失败重试次数 &ndash;&gt;
        <property name="acquireRetryAttempts" value="2"/>
        &lt;!&ndash;<property name="acquireIncrement" value="10"/>&ndash;&gt;
        <property name="unreturnedConnectionTimeout" value="25"/>
        <property name="maxIdleTimeExcessConnections" value="20"/>
        <property name="maxConnectionAge" value="20"/>
    </bean>-->

    <!-- 3.配置SqlsessionFactory对象  -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池  -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置MyBatis全局配置文件-->
        <property name="configLocation" value="classpath:mybatis-conf.xml"/>
        <!-- 扫描entity包 使用别名-->
        <property name="typeAliasesPackage" value="org.seckill.entity"/>
        <!-- 扫描sql文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!-- 4.配置扫描dao接口包 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 需要扫描dao接口包 -->
        <property name="basePackage" value="org.seckill.dao"/>
    </bean>

    <!-- 方法一：RedisDao -->
    <bean id="redisDao" class="org.seckill.dao.cache.RedisDao">
        <!--<constructor-arg index="0" value="localhost"/>-->
        <!--<constructor-arg index="1" value="6379"/>-->
        <constructor-arg index="0" value=""/>
        <constructor-arg index="1" value="6379"/>
    </bean>

    <!-- 方法二:spring-data-redis -->
    <!--<context:component-scan base-package="org.seckill.service" />
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="#{db.redis-maxIdle}" />
        <property name="testOnBorrow" value="#{db.redis-testOnBorrow}" />
    </bean>

    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="#{db.redis-host}"/>
        <property name="port" value="#{db.redis-port}"/>
        <property name="poolConfig" ref="poolConfig"/>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory"   ref="connectionFactory" />
    </bean>-->

</beans>